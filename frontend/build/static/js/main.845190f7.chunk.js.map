{"version":3,"sources":["store/index.js","actions/types.js","reducers/index.js","reducers/auth.js","reducers/post.js","reducers/subscription.js","reducers/user.js","utils/setAuthToken.js","store/initialState.js","components/shared/PrivateRoute.js","actions/auth.js","components/layout/Header.js","components/layout/Footer.js","components/auth/Login.js","components/auth/Register.js","actions/post.js","components/shared/PostForm.js","components/shared/Post/Like.js","components/shared/ProfileImage.js","components/shared/Post/index.js","components/shared/Post/Post.js","components/shared/Loader/index.js","components/shared/Loader/Loader.js","components/shared/Posts.js","components/all-posts/AllPosts.js","components/single-post/Comment.js","components/single-post/CommentForm.js","components/single-post/SinglePost.js","actions/user.js","actions/subscription.js","components/user-profile/Subscription.js","components/user-profile/UserProifle.js","components/feed/Feed.js","components/not-found/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Provider","initialState","reducer","children","useReducer","state","dispatch","value","connect","mapStateToProps","actions","Component","props","Consumer","result","key","wrapActions","SET_CURRENT_USER","POST_LOADING","ADD_POST","UPDATE_POST","UPDATE_POSTS","GET_POSTS","GET_POST","DELETE_POST","CLEAR_POSTS","SUBSCRIPTION_LOADING","ADD_SUBSCRIPTION","GET_SUBSCRIPTIONS","DELETE_SUBSCRIPTION","USER_LOADING","GET_USER","combineReducers","reducers","action","nextState","previousStateForKey","nextStateForKey","auth","type","isAuthenticated","Object","keys","payload","length","user","post","isLoading","posts","totalCount","map","p","_id","filter","subscription","subscriptions","s","token","axios","defaults","headers","common","localStorage","access_token","setAuthToken","decoded","jwtDecode","currentTime","Date","now","exp","removeItem","window","location","href","component","rest","render","to","setCurrentUser","logout","links","useState","isExpanded","setIsExpanded","className","role","onClick","prev","aria-haspopup","aria-expanded","aria-labelledby","id","e","preventDefault","Fragment","class","data-toggle","data-target","aria-controls","aria-label","getFullYear","login","userData","then","res","data","setItem","history","email","setEmail","password","setPassword","useEffect","push","onSubmit","placeholder","name","onChange","target","pattern","required","register","setName","clearPosts","setPostLoading","create","body","setBody","theme","modules","toolbar","createLike","postId","TYPE","removeLike","likeId","delete","likes","existedLike","find","l","width","src","md5","alt","Post","remove","ProfileImage","createdDate","toDateString","dangerouslySetInnerHTML","__html","Loader","getAll","params","get","catch","queryParams","activePage","setActivePage","getQueryParams","skip","limit","itemsCountPerPage","totalItemsCount","page","itemClass","linkClass","removeComment","commentId","comment","ReactComment","el","useRef","current","outerHTML","text","ref","createComment","getPostById","match","comments","c","setUserLoading","setSubscriptionLoading","like","withRouter","userId","profile","existedSub","subscriber","getUserById","getAllSubscriptions","users","join","App","rootReducer","path","Register","Login","exact","AllPosts","SinglePost","UserProfile","Feed","NotFound","Footer","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2OAEMA,EAAUC,IAAMC,gBAETC,EAAW,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAChD,EAA0BL,IAAMM,WAAWF,EAASD,GAApD,mBAAOI,EAAP,KAAcC,EAAd,KACA,OACE,cAACT,EAAQG,SAAT,CAAkBO,MAAO,CAAEF,QAAOC,YAAlC,SAA+CH,KAYtCK,EAAU,SAACC,EAAiBC,GAAlB,OAA8B,SAACC,GAAD,OAAe,SAACC,GAAD,OAEhE,cAACf,EAAQgB,SAAT,UACG,gBAAGR,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACC,cAACK,EAAD,uCACMC,GACAH,EAAgBJ,IAdV,SAACK,EAASJ,GAC5B,IAAMQ,EAAS,GAD0B,WAE9BC,GACTD,EAAOC,GAAO,kBAAaL,EAAQK,GAAR,MAAAL,EAAO,UAAPA,CAAsBJ,KADnD,IAAK,IAAMS,KAAOL,EAAU,EAAjBK,GAGX,OAAOD,EAUKE,CAAYN,EAASJ,WC1BtBW,EAAmB,mBAEnBC,EAAe,eACfC,EAAW,WACXC,EAAc,cACdC,EAAe,eACfC,EAAY,YACZC,EAAW,WACXC,EAAc,cACdC,EAAc,cAEdC,EAAuB,uBACvBC,EAAmB,mBACnBC,EAAoB,oBACpBC,EAAsB,sBAEtBC,EAAe,eACfC,EAAW,W,QCVTC,EFyBgB,SAACC,GAAD,OAAc,SAAC5B,EAAO6B,GACnD,IAAMC,EAAY,GAClB,IAAK,IAAMpB,KAAOkB,EAAU,CAC1B,IAAMG,EAAsB/B,EAAMU,GAC5BsB,EAAkBJ,EAASlB,GAAKqB,EAAqBF,GAC3DC,EAAUpB,GAAOsB,EAEnB,OAAOF,GEhCMH,CAAgB,CAAEM,KCLlB,SAACjC,EAAO6B,GACrB,OAAQA,EAAOK,MACb,KAAKtB,EACH,OAAO,2BACFZ,GADL,IAEEmC,gBAAwD,IAAvCC,OAAOC,KAAKR,EAAOS,SAASC,OAC7CC,KAAMX,EAAOS,UAEjB,QACE,OAAOtC,IDJ0ByC,KEIxB,SAACzC,EAAO6B,GACrB,OAAQA,EAAOK,MACb,KAAKrB,EACH,OAAO,2BACFb,GADL,IAEE0C,UAAWb,EAAOS,UAEtB,KAAKlB,EACH,OAAO,2BACFpB,GADL,IAEE2C,MAAO,GACPC,WAAY,IAEhB,KAAK3B,EACH,OAAO,2BACFjB,GADL,IAEE2C,MAAOd,EAAOS,QAAQK,MACtBC,WAAYf,EAAOS,QAAQM,WAC3BF,WAAW,IAEf,KAAKxB,EACH,OAAO,2BACFlB,GADL,IAEEyC,KAAMZ,EAAOS,QACbI,WAAW,IAEf,KAAK5B,EACH,OAAO,2BACFd,GADL,IAEE2C,MAAM,CAAEd,EAAOS,SAAV,mBAAsBtC,EAAM2C,UAErC,KAAK3B,EACH,OAAO,2BACFhB,GADL,IAEE2C,MAAO3C,EAAM2C,MAAME,KAAI,SAACC,GAAD,OACrBA,EAAEC,MAAQlB,EAAOS,QAAQS,IAAMlB,EAAOS,QAAUQ,OAGtD,KAAK/B,EACH,OAAO,2BACFf,GADL,IAEEyC,KAAMZ,EAAOS,UAEjB,KAAKnB,EACH,OAAO,2BACFnB,GADL,IAEE2C,MAAO3C,EAAM2C,MAAMK,QAAO,SAACP,GAAD,OAAUA,EAAKM,MAAQlB,EAAOS,aAE5D,QACE,OAAOtC,IFrDgCiD,aGA9B,SAACjD,EAAO6B,GACrB,OAAQA,EAAOK,MACb,KAAKb,EACH,OAAO,2BACFrB,GADL,IAEE0C,UAAWb,EAAOS,UAEtB,KAAKf,EACH,OAAO,2BACFvB,GADL,IAEEkD,cAAerB,EAAOS,QACtBI,WAAW,IAEf,KAAKpB,EACH,OAAO,2BACFtB,GADL,IAEEkD,cAAc,CAAErB,EAAOS,SAAV,mBAAsBtC,EAAMkD,kBAE7C,KAAK1B,EACH,OAAO,2BACFxB,GADL,IAEEkD,cAAelD,EAAMkD,cAAcF,QACjC,SAACG,GAAD,OAAOA,EAAEJ,MAAQlB,EAAOS,aAG9B,QACE,OAAOtC,IH1B8CwC,KIL5C,SAACxC,EAAO6B,GACrB,OAAQA,EAAOK,MACb,KAAKT,EACH,OAAO,2BACFzB,GADL,IAEE0C,UAAWb,EAAOS,UAEtB,KAAKZ,EACH,OAAO,2BACF1B,GADL,IAEEwC,KAAMX,EAAOS,QACbI,WAAW,IAEf,QACE,OAAO1C,M,wBCdE,WAACoD,GACVA,EACFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAE1CC,IAAMC,SAASC,QAAQC,OAAvB,eCFL5D,EAAe,CACnBqC,KAAM,CACJE,iBAAiB,EACjBK,KAAM,IAERC,KAAM,CACJE,MAAO,GACPC,WAAY,EACZH,KAAM,KACNC,WAAW,GAEbO,aAAc,CACZC,cAAe,GACfR,WAAW,GAEbF,KAAM,CACJA,KAAM,KACNE,WAAW,IAIf,GAAIe,aAAaC,aAAc,CAC7B,IAAQA,EAAiBD,aAAjBC,aACRC,EAAaD,GACb,IAAME,EAAUC,YAAUH,GAC1B9D,EAAaqC,KAAKO,KAAOoB,EACzBhE,EAAaqC,KAAKE,iBAAkB,EACpC,IAAM2B,EAAcC,KAAKC,MAAQ,IAC7BJ,EAAQK,IAAMH,IAChBL,aAAaS,WAAW,gBACxBP,GAAa,GACb/D,EAAaqC,KAAKO,KAAO,GACzB5C,EAAaqC,KAAKE,iBAAkB,EACpCgC,OAAOC,SAASC,KAAO,UAIZzE,Q,QClBAO,KAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEnC9B,EAjBM,SAAC,GAAD,IAAcG,EAAd,EAAGgE,UAAsBrC,EAAzB,EAAyBA,KAASsC,EAAlC,2CACnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACjE,GAAD,OACmB,IAAzB0B,EAAKE,gBACH,cAAC7B,EAAD,eAAeC,IAEf,cAAC,IAAD,CAAUkE,GAAG,kBCaRC,EAAiB,SAAClC,GAAD,MAAW,CACvCN,KAAMtB,EACN0B,QAASE,IC0FIrC,KAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAE0C,ODlGpB,kBAAM,SAAC1E,GAC3BwD,aAAaS,WAAW,gBACxBP,GAAa,GACb1D,EAASyE,EAAe,QC+FXvE,EA/GA,SAAC,GAAiD,IAO3DyE,EAPYD,EAA8C,EAA9CA,OAA8C,IAAtC1C,KAAQE,EAA8B,EAA9BA,gBAAiBK,EAAa,EAAbA,KAKjD,EAAoCqC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAuDA,OAlDEH,EADEzC,EAEA,qBAAI6C,UAAU,oBAAd,UACE,oBACEA,UAAU,WACVX,KAAK,IACLY,KAAK,SACLC,QAAS,kBAAMH,GAAc,SAACI,GAAD,OAAWA,MACxCC,gBAAc,OACdC,gBAAc,QANhB,UAQE,mBAAGL,UAAU,eARf,aAWCF,EACC,sBAAKQ,kBAAgB,iBAArB,UACE,cAAC,IAAD,CAAMN,UAAU,gBAAgBP,GAAI,SAAWjC,EAAK+C,GAApD,wBAGA,qBAAKP,UAAU,qBACf,mBAAGA,UAAU,gBAAgBX,KAAK,IAAIa,QA5B/B,SAACM,GAChBA,EAAEC,iBACFd,KA0BQ,wBAIA,QAKN,eAAC,IAAMe,SAAP,WACE,oBAAIV,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWP,GAAG,SAA9B,UACE,sBAAKkB,MAAM,WAAX,UACE,mBAAGA,MAAM,yCACT,mBAAGA,MAAM,kCAHb,cAQF,oBAAIX,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWP,GAAG,YAA9B,UACE,sBAAKkB,MAAM,WAAX,UACE,mBAAGA,MAAM,2CACT,mBAAGA,MAAM,kCAHb,mBAYN,qBAAKX,UAAU,8DAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeP,GAAG,IAAlC,kBAGA,wBACEO,UAAU,iBACV9C,KAAK,SACL0D,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdT,gBAAc,QACdU,aAAW,oBAPb,SASE,sBAAMf,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BO,GAAG,yBAA7C,UACE,qBAAIP,UAAU,qBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWP,GAAG,IAA9B,UACE,sBAAKkB,MAAM,WAAX,UACE,mBAAGA,MAAM,uCACT,mBAAGA,MAAM,kCAHb,iBAQDxD,GACC,oBAAI6C,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWP,GAAG,QAA9B,UACE,mBAAGO,UAAU,YADf,eAON,oBAAIA,UAAU,aAAd,SAA4BJ,eCtGvB,oBACb,yBAAQI,UAAU,kBAAlB,qCAC4B,IAAIjB,MAAOiC,kBCkF1B7F,KAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAEgE,MH5ErB,SAACC,GAAD,OAAc,SAACjG,GAClCoD,IAAMZ,KAAK,kBAAmByD,GAAUC,MAAK,SAACC,GAC5C,IAAQhD,EAAUgD,EAAIC,KAAdjD,MACRK,aAAa6C,QAAQ,eAAgBlD,GACrCO,EAAaP,GACb,IAAMQ,EAAUC,YAAUT,GAC1BnD,EAASyE,EAAed,UGsEbzD,EAhFD,SAAC,GAA8B,IAA5BoG,EAA2B,EAA3BA,QAAStE,EAAkB,EAAlBA,KAAMgE,EAAY,EAAZA,MAC9B,EAA0BpB,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAAgC5B,mBAAS,IAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACJ3E,EAAKE,iBACPoE,EAAQM,KAAK,OAEd,CAAC5E,IAOJ,OACE,qBAAK+C,UAAU,WAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,0BAASA,UAAU,YAAnB,UACE,oBAAIA,UAAU,mCAAd,oBACA,uBAAM8B,SAXC,SAACtB,GAChBA,EAAEC,iBACFQ,EAAM,CAAEO,QAAOE,cASP,UACE,qBAAK1B,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,mBAAGA,UAAU,mBAGjB,uBACEA,UAAU,eACV+B,YAAY,QACZ7E,KAAK,QACL8E,KAAK,QACL9G,MAAOsG,EACPS,SAAU,SAACzB,GAAD,OAAOiB,EAASjB,EAAE0B,OAAOhH,QACnCiH,QAAQ,UACRC,UAAQ,SAId,qBAAKpC,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,mBAAGA,UAAU,mBAGjB,uBACEA,UAAU,eACV+B,YAAY,WACZ7E,KAAK,WACL8E,KAAK,WACL9G,MAAOwG,EACPO,SAAU,SAACzB,GAAD,OAAOmB,EAAYnB,EAAE0B,OAAOhH,QACtCiH,QAAQ,UACRC,UAAQ,SAId,qBAAKpC,UAAU,aAAf,SACE,wBAAQ9C,KAAK,SAAS8C,UAAU,yBAAhC,oCCsCD7E,KAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAEoF,SJnGlB,SAACnB,EAAUK,GAAX,OAAuB,WAC7ClD,IAAMZ,KAAK,qBAAsByD,GAAUC,MAAK,kBAAMI,EAAQM,KAAK,gBIkGtD1G,EAnGE,SAAC,GAAiC,IAA/B8B,EAA8B,EAA9BA,KAAMsE,EAAwB,EAAxBA,QAASc,EAAe,EAAfA,SACjC,EAAwBxC,mBAAS,IAAjC,mBAAOmC,EAAP,KAAaM,EAAb,KACA,EAA0BzC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAAgC5B,mBAAS,IAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACJ3E,EAAKE,iBACPoE,EAAQM,KAAK,OAEd,IAOH,OACE,qBAAK7B,UAAU,WAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,0BAASA,UAAU,YAAnB,UACE,oBAAIA,UAAU,mCAAd,0BACA,uBAAM8B,SAXC,SAACtB,GAChBA,EAAEC,iBACF4B,EAAS,CAAEL,OAAMR,QAAOE,YAAYH,IAS5B,UACE,qBAAKvB,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,mBAAGA,UAAU,mBAGjB,uBACEA,UAAU,eACV+B,YAAY,OACZ7E,KAAK,OACL8E,KAAK,OACL9G,MAAO8G,EACPC,SAAU,SAACzB,GAAD,OAAO8B,EAAQ9B,EAAE0B,OAAOhH,QAClCiH,QAAQ,UACRC,UAAQ,SAId,qBAAKpC,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,mBAAGA,UAAU,uBAGjB,uBACEA,UAAU,eACV+B,YAAY,QACZ7E,KAAK,QACL8E,KAAK,QACL9G,MAAOsG,EACPS,SAAU,SAACzB,GAAD,OAAOiB,EAASjB,EAAE0B,OAAOhH,QACnCiH,QAAQ,UACRC,UAAQ,SAId,qBAAKpC,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,mBAAGA,UAAU,mBAGjB,uBACEA,UAAU,eACV+B,YAAY,WACZ7E,KAAK,WACL8E,KAAK,WACL9G,MAAOwG,EACPO,SAAU,SAACzB,GAAD,OAAOmB,EAAYnB,EAAE0B,OAAOhH,QACtCiH,QAAQ,iBAId,qBAAKnC,UAAU,aAAf,SACE,wBAAQ9C,KAAK,SAAS8C,UAAU,yBAAhC,uC,iBCeVuC,EAAa,iBAAO,CACxBrF,KAAMd,IAGFoG,EAAiB,SAAC9E,GAAD,MAAgB,CACrCR,KAAMrB,EACNyB,QAASI,ICtDIvC,KAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAEwF,ODzCpB,SAAChF,GAAD,OAAU,SAACxC,GAC/BoD,IAAMZ,KAAK,aAAcA,GAAM0D,MAAK,SAACC,GAAD,OAClCnG,EAAS,CACPiC,KAAMpB,EACNwB,QAAS8D,EAAIC,aCqCJlG,EA9CE,SAAC,GAAgB,IAAdsH,EAAa,EAAbA,OAClB,EAAwB5C,mBAAS,IAAjC,mBAAO6C,EAAP,KAAaC,EAAb,KAQA,OACE,qBAAK3C,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAM8B,SATK,SAACtB,GAChBA,EAAEC,iBACFgC,EAAO,CAAEC,SACTC,EAAQ,KAMJ,UACE,qBAAK3C,UAAU,aAAf,SACE,cAAC,IAAD,CACE+B,YAAY,aACZa,MAAM,OACNC,QAAS,CACPC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,OAAQ,QAAS,SAClB,CAAC,WAGL5H,MAAOwH,EACPT,SAAU,SAAC/G,GAAD,OAAWyH,EAAQzH,QAGjC,qBAAK8E,UAAU,wBAAf,SACE,wBAAQ9C,KAAK,SAAS8C,UAAU,eAAhC,+B,kBCAG7E,MAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAE8F,WF6BhB,SAACC,EAAQC,GAAT,OAAkB,SAAChI,GAC3CoD,IAAMZ,KAAN,qBAAyBuF,EAAzB,WAAyC7B,MAAK,SAACC,GAAD,OAC5CnG,EAAS,CACPiC,KAAM+F,EACN3F,QAAS8D,EAAIC,YEjCmC6B,WFsC5B,SAACF,EAAQG,EAAQF,GAAjB,OAA0B,SAAChI,GACnDoD,IAAM+E,OAAN,qBAA2BJ,EAA3B,kBAA2CG,IAAUhC,MAAK,SAACC,GAAD,OACxDnG,EAAS,CACPiC,KAAM+F,EACN3F,QAAS8D,EAAIC,aE1CJlG,EA9BF,SAAC,GAA2D,IAAzD8B,EAAwD,EAAxDA,KAAM+F,EAAkD,EAAlDA,OAAQK,EAA0C,EAA1CA,MAAOJ,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYH,EAAiB,EAAjBA,WAYrD,OACE,oBAAG1D,KAAK,IAAIY,KAAK,SAASD,UAAU,YAAYE,QAZ9B,SAACM,GAEnB,GADAA,EAAEC,iBACExD,EAAKE,gBAAiB,CACxB,IAAMmG,EAAcD,EAAME,MAAK,SAACC,GAAD,OAAOA,EAAEhG,OAASP,EAAKO,KAAK+C,MACvD+C,EACFJ,EAAWF,EAAQM,EAAYvF,IAAKkF,GAEpCF,EAAWC,EAAQC,KAKvB,UACE,mBAAGjD,UAAU,gBADf,IACmCqD,EAAM9F,a,oBCjB9B,mBAAGC,EAAH,EAAGA,KAAH,IAASiG,aAAT,MAAiB,GAAjB,SACb,qBACEC,IACE,4EACAC,KAAInG,EAAKgE,OAEXxB,UAAU,iBACV4D,IAAKpG,EAAKwE,KACVyB,MAAOA,KCTII,GCyEA1I,GAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAE6G,OLnBpB,SAACvD,GAAD,OAAQ,SAACtF,GAC7BoD,IAAM+E,OAAN,qBAA2B7C,IAAMY,MAAK,kBACpClG,EAAS,CACPiC,KAAMf,EACNmB,QAASiD,UKeApF,EAjEF,SAAC,GAAkC,IAAhCsC,EAA+B,EAA/BA,KAAMqG,EAAyB,EAAzBA,OAAQ7G,EAAiB,EAAjBA,KAAMgG,EAAW,EAAXA,KAElC,OACE,sBAAKjD,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,oDAAf,UACE,sBAAKA,UAAU,oDAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAMP,GAAI,SAAWhC,EAAKD,KAAKO,IAA/B,SACE,cAACgG,GAAD,CAAcvG,KAAMC,EAAKD,KAAMiG,MAAM,WAGzC,sBAAKzD,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBvC,EAAKD,KAAKwE,OACnC,sBAAKhC,UAAU,gBAAf,UACE,mBAAGA,UAAU,kBAAqB,IACjC,IAAIjB,KAAKtB,EAAKuG,aAAaC,wBAIjChH,EAAKE,iBAAmBF,EAAKO,KAAKwE,OAASvE,EAAKD,KAAKwE,MACpD,sBAAKhC,UAAU,WAAf,UACE,wBACEA,UAAU,+BACV9C,KAAK,SACLqD,GAAG,OACHK,cAAY,WACZR,gBAAc,OACdC,gBAAc,UAEhB,qBACEL,UAAU,oCACVM,kBAAgB,OAFlB,SAIE,mBAAGN,UAAU,gBAAgBC,KAAK,SAASC,QAjCxC,kBAAM4D,EAAOrG,EAAKM,MAiCrB,8BAQV,qBACEiC,UAAU,YACVkE,wBAAyB,CAAEC,OAAQ1G,EAAKiF,QAE1C,sBAAK1C,UAAU,cAAf,UACE,cAAC,GAAD,CAAMgD,OAAQvF,EAAKM,IAAKsF,MAAO5F,EAAK4F,MAAOJ,KAAMA,IACjD,cAAC,IAAD,CAAMxD,GAAI,SAAWhC,EAAKM,IAAKiC,UAAU,YAAzC,SACE,mBAAGA,UAAU,iCCzDRoE,I,OCEA,kBACb,sBAAK7D,GAAG,YAAYP,UAAU,OAA9B,UACE,qBAAKO,GAAG,cAAcP,UAAU,cAChC,qBAAKO,GAAG,cAAcP,UAAU,cAChC,qBAAKO,GAAG,cAAcP,UAAU,cAChC,qBAAKO,GAAG,cAAcP,UAAU,cAChC,qBAAKO,GAAG,cAAcP,UAAU,cAChC,qBAAKO,GAAG,cAAcP,UAAU,cAChC,qBAAKO,GAAG,cAAcP,UAAU,cAChC,qBAAKO,GAAG,cAAcP,UAAU,mBCsDrB7E,MALS,SAACH,GAAD,MAAY,CAClCyC,KAAMzC,EAAMyC,KACZR,KAAMjC,EAAMiC,QAG0B,CAAEoH,OR9CpB,SAACC,GAAD,OAAY,SAACrJ,GACjCA,EAASuH,GAAe,IACxBnE,IACGkG,IAAI,aAAc,CAAED,WACpBnD,MAAK,SAACC,GAAD,OACJnG,EAAS,CACPiC,KAAMjB,EACNqB,QAAS,CACPK,MAAOyD,EAAIC,KACXzD,YAAawD,EAAI7C,QAAQ,uBAI9BiG,OAAM,WACLvJ,EAASuH,GAAe,IACxBvH,EAASsH,WQ+BApH,EAtDD,SAAC,GAIR,IAHLkJ,EAGI,EAHJA,OACAI,EAEI,EAFJA,YAEI,IADJhH,KAAQC,EACJ,EADIA,UAAWC,EACf,EADeA,MAAOC,EACtB,EADsBA,WAE1B,EAAoCiC,mBAAS,GAA7C,mBAAO6E,EAAP,KAAmBC,EAAnB,KAEA/C,qBAAU,kBAAMyC,EAAOO,OAAmB,IAE1ChD,qBAAU,kBAAMyC,EAAOO,OAAmB,CAACF,IAE3C,IAAME,EAAiB,8BAAC,eACnBH,GADkB,IAErBI,KAfU,IAeHH,EAAa,GACpBI,MAhBU,MAmBZ,OACE,eAAC,IAAMpE,SAAP,WACGhD,GAAa,cAAC,GAAD,KACZA,GAA4B,IAAfE,GACb,qBAAKoC,UAAU,cAAf,SACE,oDAGHrC,EAAME,KAAI,SAACC,GAAD,OACT,cAAC,GAAD,CAAML,KAAMK,EAAemF,KAAMjH,GAAb8B,EAAEC,SAEtBL,GAAaE,EAAaD,EAAMJ,QAChC,cAAC,KAAD,CACEmH,WAAYA,EACZK,kBAjCI,GAkCJC,gBAAiBpH,EACjBqE,SAAU,SAACgD,GAAD,OAAUN,EAAcM,IAClCC,UAAU,YACVC,UAAU,oBCvBLhK,MAJS,SAACH,GAAD,MAAY,CAClCiC,KAAMjC,EAAMiC,QAGC9B,EAjBE,SAAC,GAAD,IAAG8B,EAAH,EAAGA,KAAH,OACf,qBAAK+C,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACG/C,EAAKE,iBAAmB,cAAC,EAAD,IACzB,cAAC,GAAD,CAAOsH,YAAa,aCqEXtJ,MAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAEmI,cVWb,SAACpC,EAAQqC,GAAT,OAAuB,SAACpK,GACnDoD,IAAM+E,OAAN,qBAA2BJ,EAA3B,qBAA8CqC,IAAalE,MAAK,SAACC,GAAD,OAC9DnG,EAAS,CACPiC,KAAMnB,EACNuB,QAAS8D,EAAIC,aUfJlG,EAzEC,SAAC,GAA8C,IAA5CmK,EAA2C,EAA3CA,QAAStC,EAAkC,EAAlCA,OAAQoC,EAA0B,EAA1BA,cAAenI,EAAW,EAAXA,KAG3CsI,EAAe,SAAChK,GACpB,IAAMiK,EAAKC,mBAIX,OAHA7D,qBAAU,WACR4D,EAAGE,QAAQC,UAAX,kBAA+BpK,EAAMqK,KAArC,aACC,IACI,qBAAKC,IAAKL,KAGnB,OACE,qBAAKxF,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UAEE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,oDAAf,SACE,sBAAKA,UAAU,oDAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC+D,GAAD,CAAcvG,KAAM8H,EAAQ9H,KAAMiG,MAAM,SAE1C,sBAAKzD,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBsF,EAAQ9H,KAAKwE,OACtC,sBAAKhC,UAAU,gBAAf,UACE,mBAAGA,UAAU,kBAAqB,IACjC,IAAIjB,KAAKuG,EAAQtB,aAAaC,4BAMzC,qBAAKjE,UAAU,sBAAf,SACG/C,EAAKE,iBAAmBF,EAAKO,KAAKwE,OAASsD,EAAQ9H,KAAKwE,MACvD,sBAAKhC,UAAU,WAAf,UACE,wBACEA,UAAU,+BACV9C,KAAK,SACLqD,GAAG,OACHK,cAAY,WACZR,gBAAc,OACdC,gBAAc,UAEhB,qBACEL,UAAU,oCACVM,kBAAgB,OAFlB,SAIE,mBAAGN,UAAU,gBAAgBC,KAAK,SAASC,QA9C1C,kBAAMkF,EAAcpC,EAAQsC,EAAQvH,MA8CrC,8BAQV,uBACA,qBAAKiC,UAAU,MAAf,SACE,cAACuF,EAAD,CAAcK,KAAMN,EAAQ5C,iBCnBvBvH,MAFS,SAACH,GAAD,MAAY,CAAEiC,KAAMjC,EAAMiC,QAEV,CAAE6I,cXqCb,SAAC9C,EAAQsC,GAAT,OAAqB,SAACrK,GACjDoD,IAAMZ,KAAN,qBAAyBuF,EAAzB,aAA4CsC,GAASnE,MAAK,SAACC,GAAD,OACxDnG,EAAS,CACPiC,KAAMnB,EACNuB,QAAS8D,EAAIC,aWzCJlG,EAvCK,SAAC,GAA+B,IAA7B6H,EAA4B,EAA5BA,OAAQ8C,EAAoB,EAApBA,cAC7B,EAAwBjG,mBAAS,IAAjC,mBAAO6C,EAAP,KAAaC,EAAb,KAQA,OACE,qBAAK3C,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAM8B,SATK,SAACtB,GAChBA,EAAEC,iBACFqF,EAAc9C,EAAQ,CAAEN,SACxBC,EAAQ,KAMJ,UACE,qBAAK3C,UAAU,aAAf,SACE,cAAC,IAAD,CACE+B,YAAY,qBACZa,MAAM,OACNC,QAAS,CAAEC,SAAS,GACpB5H,MAAOwH,EACPT,SAAU,SAAA/G,GAAK,OAAIyH,EAAQzH,QAG/B,qBAAK8E,UAAU,YAAf,SACE,wBAAQ9C,KAAK,SAAS8C,UAAU,eAAhC,iCCaG7E,MALS,SAACH,GAAD,MAAY,CAClCyC,KAAMzC,EAAMyC,KACZR,KAAMjC,EAAMiC,QAG0B,CAAE8I,YZHnB,SAACxF,EAAIgB,GAAL,OAAiB,SAACtG,GACvCA,EAASuH,GAAe,IACxBnE,IACGkG,IADH,qBACqBhE,IAClBY,MAAK,SAACC,GAAD,OACJnG,EAAS,CACPiC,KAAMhB,EACNoB,QAAS8D,EAAIC,UAGhBmD,OAAM,WACLvJ,EAASuH,GAAe,IACxBjB,EAAQM,KAAK,cYTJ1G,EA/BI,SAAC,GAAiD,IAA/C4K,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,MAAOvI,EAA0B,EAA1BA,KAAMR,EAAoB,EAApBA,KAAMsE,EAAc,EAAdA,QAGpD,OAFAK,qBAAU,kBAAMmE,EAAYC,EAAM1B,OAAO/D,GAAIgB,KAAU,IAE/C9D,EAAKC,WAA2B,OAAdD,EAAKA,KAa7B,cAAC,GAAD,IAZA,qBAAKuC,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,GAAD,CAAMvC,KAAMA,EAAKA,KAAMwF,KAAMlH,IAC7B,sBAAKiE,UAAU,oBAAf,UACG/C,EAAKE,iBAAmB,cAAC,GAAD,CAAa6F,OAAQvF,EAAKA,KAAKM,MACvDN,EAAKA,KAAKwI,SAASpI,KAAI,SAACqI,GAAD,OACtB,cAAC,GAAD,CAASZ,QAASY,EAAGlD,OAAQvF,EAAKA,KAAKM,KAAUmI,EAAEnI,mBCFzDoI,GAAiB,SAACzI,GAAD,MAAgB,CACrCR,KAAMT,EACNa,QAASI,ICJE2G,GACX,eAACC,EAAD,uDAAU,GAAV,OACA,SAACrJ,GACCA,EAASmL,IAAuB,IAChC/H,IACGkG,IAAI,qBAAsB,CAAED,WAC5BnD,MAAK,SAACC,GAAD,OACJnG,EAAS,CACPiC,KAAMX,EACNe,QAAS8D,EAAIC,UAGhBmD,OAAM,kBAAMvJ,EAASmL,IAAuB,SAYtCA,GAAyB,SAAC1I,GAAD,MAAgB,CACpDR,KAAMb,EACNiB,QAASI,ICgBIvC,MALS,SAACH,GAAD,MAAY,CAClCiC,KAAMjC,EAAMiC,KACZgB,aAAcjD,EAAMiD,gBAGkB,CACtCwE,ODpDoB,SAAC4D,GAAD,OAAU,SAACpL,GAC/BoD,IAAMZ,KAAK,qBAAsB4I,GAAMlF,MAAK,SAACC,GAAD,OAC1CnG,EAAS,CACPiC,KAAMZ,EACNgB,QAAS8D,EAAIC,YCiDjBgD,UACAP,OD9BoB,SAACvD,GAAD,OAAQ,SAACtF,GAC7BoD,IAAM+E,OAAN,6BAAmC7C,IAAMY,MAAK,kBAC5ClG,EAAS,CACPiC,KAAMV,EACNc,QAASiD,UCuBApF,CAIZmL,aAzDkB,SAAC,GAQf,IAPL7D,EAOI,EAPJA,OACA4B,EAMI,EANJA,OACAP,EAKI,EALJA,OACA7G,EAII,EAJJA,KAII,IAHJgB,aAAgBC,EAGZ,EAHYA,cAAeR,EAG3B,EAH2BA,UAC/B6D,EAEI,EAFJA,QACAgF,EACI,EADJA,OAEA3E,qBAAU,kBAAMyC,EAAO,CAAEmC,QAASD,MAAW,IAkB7C,OACG7I,GACC,yBACEsC,UAAU,uCACVE,QApBa,SAACM,GAElB,GADAA,EAAEC,iBACGxD,EAAKE,gBAEH,CACL,IAAMsJ,EAAavI,EAAcqF,MAC/B,SAACpF,GAAD,OAAOA,EAAEuI,aAAezJ,EAAKO,KAAK+C,MAEhCkG,EACF3C,EAAO2C,EAAW1I,KAElB0E,EAAO,CAAE+D,QAASD,SARpBhF,EAAQM,KAAK,WAeb,yBAIc,mBAAG7B,UAAU,gBAJ3B,IAI+C9B,EAAcX,cC8BpDpC,MALS,SAACH,GAAD,MAAY,CAClCwC,KAAMxC,EAAMwC,KACZP,KAAMjC,EAAMiC,QAG0B,CAAE0J,YHlEf,SAACpG,EAAIgB,GAAL,OAAiB,SAACtG,GAC3CA,EAASkL,IAAe,IACxB9H,IACGkG,IADH,qBACqBhE,IAClBY,MAAK,SAACC,GAAD,OACJnG,EAAS,CACPiC,KAAMR,EACNY,QAAS8D,EAAIC,UAGhBmD,OAAM,WACLvJ,EAASkL,IAAe,IACxB5E,EAAQM,KAAK,cGsDJ1G,EA3DK,SAAC,GAMd,IALLwL,EAKI,EALJA,YACAX,EAII,EAJJA,MACAzE,EAGI,EAHJA,QAGI,IAFJ/D,KAAQA,EAEJ,EAFIA,KAAME,EAEV,EAFUA,UACdT,EACI,EADJA,KAIA,OAFA2E,qBAAU,kBAAM+E,EAAYX,EAAM1B,OAAO/D,GAAIgB,KAAU,IAE/C7D,GAAsB,OAATF,EAmCnB,cAAC,GAAD,IAlCA,eAAC,IAAMkD,SAAP,WACE,qBAAKV,UAAU,WAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,mBAAd,SAAkCxC,EAAKwE,OACvC,8BACE,kDACC,IAAIjD,KAAKvB,EAAKwG,aAAaC,qBAGhC,qBAAKjE,UAAU,oBAAf,SACE,cAAC+D,GAAD,CAAcvG,KAAMA,eAKzBP,EAAKO,KAAK+C,KAAO/C,EAAKO,MACvB,qBAAKiC,UAAU,WAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,GAAD,CAAcuG,OAAQ/I,EAAKO,YAKnC,qBAAKiC,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACG/C,EAAKO,KAAK+C,KAAO/C,EAAKO,KAAO,cAAC,EAAD,IAC9B,cAAC,GAAD,CAAO0G,YAAa,CAAEjH,KAAMA,EAAKO,kBCJ5B5C,MALS,SAACH,GAAD,MAAY,CAClCiD,aAAcjD,EAAMiD,aACpBhB,KAAMjC,EAAMiC,QAG0B,CAAE2J,wBAA3BzL,EAtCF,SAAC,GAIP,IAHLyL,EAGI,EAHJA,oBACA3J,EAEI,EAFJA,KAEI,IADJgB,aAAgBP,EACZ,EADYA,UAAWQ,EACvB,EADuBA,cAG3B,OADA0D,qBAAU,kBAAMgF,EAAoB,CAAEF,WAAYzJ,EAAKO,KAAK+C,OAAO,IAC3D7C,EAiBN,cAAC,GAAD,IAhBA,qBAAKsC,UAAU,WAAf,SACE,qBAAKA,UAAU,mBAAf,SAC4B,IAAzB9B,EAAcX,OACb,cAAC,GAAD,CACEkH,YAAa,CACXoC,MAAO3I,EAAcL,KAAI,SAACM,GAAD,OAAOA,EAAEqI,WAASM,KAAK,QAIpD,qBAAK9G,UAAU,cAAf,SACE,oECvBG,qBACb,qBAAKA,UAAU,mBAAf,SACE,mDCsCW+G,OAxBf,WACE,OACE,cAAC,EAAD,CAAUlM,QAASmM,EAAapM,aAAcA,EAA9C,SACE,cAAC,IAAD,UACE,eAAC,IAAM8F,SAAP,WACE,cAAC,EAAD,IACA,sBAAKV,UAAU,YAAf,UACE,cAAC,IAAD,CAAOiH,KAAK,YAAY3H,UAAW4H,IACnC,cAAC,IAAD,CAAOD,KAAK,SAAS3H,UAAW6H,IAChC,cAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,IAAI3H,UAAW+H,KACjC,cAAC,IAAD,CAAOJ,KAAK,YAAY3H,UAAWgI,KACnC,cAAC,IAAD,CAAOL,KAAK,YAAY3H,UAAWiI,KACnC,cAAC,IAAD,UACE,cAAC,EAAD,CAAcN,KAAK,QAAQ3H,UAAWkI,OAExC,cAAC,IAAD,CAAOP,KAAK,OAAO3H,UAAWmI,QAEhC,cAACC,EAAD,YCvBUC,QACW,cAA7BxI,OAAOC,SAASwI,UAEe,UAA7BzI,OAAOC,SAASwI,UAEhBzI,OAAOC,SAASwI,SAAS5B,MACvB,2DCPN6B,IAASrI,OAAO,cAAC,GAAD,IAASsI,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/G,MAAK,SAACgH,GAClCA,EAAaC,iB","file":"static/js/main.845190f7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport const Provider = ({ initialState, reducer, children }) => {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  return (\r\n    <Context.Provider value={{ state, dispatch }}>{children}</Context.Provider>\r\n  );\r\n};\r\n\r\nconst wrapActions = (actions, dispatch) => {\r\n  const result = {};\r\n  for (const key in actions) {\r\n    result[key] = (...args) => actions[key](...args)(dispatch);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const connect = (mapStateToProps, actions) => (Component) => (props) =>\r\n  (\r\n    <Context.Consumer>\r\n      {({ state, dispatch }) => (\r\n        <Component\r\n          {...props}\r\n          {...mapStateToProps(state)}\r\n          {...wrapActions(actions, dispatch)}\r\n        />\r\n      )}\r\n    </Context.Consumer>\r\n  );\r\n\r\nexport const combineReducers = (reducers) => (state, action) => {\r\n  const nextState = {};\r\n  for (const key in reducers) {\r\n    const previousStateForKey = state[key];\r\n    const nextStateForKey = reducers[key](previousStateForKey, action);\r\n    nextState[key] = nextStateForKey;\r\n  }\r\n  return nextState;\r\n};\r\n","export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const POST_LOADING = \"POST_LOADING\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const UPDATE_POSTS = \"UPDATE_POSTS\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const CLEAR_POSTS = \"CLEAR_POSTS\";\r\n\r\nexport const SUBSCRIPTION_LOADING = \"SUBSCRIPTION_LOADING\";\r\nexport const ADD_SUBSCRIPTION = \"ADD_SUBSCRIPTION\";\r\nexport const GET_SUBSCRIPTIONS = \"GET_SUBSCRIPTIONS\";\r\nexport const DELETE_SUBSCRIPTION = \"DELETE_SUBSCRIPTION\";\r\n\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const GET_USER = \"GET_USER\";\r\n","import { combineReducers } from \"../store/index\";\r\n\r\nimport auth from \"./auth\";\r\nimport post from \"./post\";\r\nimport subscription from \"./subscription\";\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({ auth, post, subscription, user });\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: Object.keys(action.payload).length !== 0,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  POST_LOADING,\r\n  ADD_POST,\r\n  UPDATE_POST,\r\n  UPDATE_POSTS,\r\n  GET_POSTS,\r\n  GET_POST,\r\n  DELETE_POST,\r\n  CLEAR_POSTS,\r\n} from \"../actions/types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case POST_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    case CLEAR_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        totalCount: 0,\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.posts,\r\n        totalCount: action.payload.totalCount,\r\n        isLoading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        isLoading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n      };\r\n    case UPDATE_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((p) =>\r\n          p._id === action.payload._id ? action.payload : p\r\n        ),\r\n      };\r\n    case UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  SUBSCRIPTION_LOADING,\r\n  ADD_SUBSCRIPTION,\r\n  GET_SUBSCRIPTIONS,\r\n  DELETE_SUBSCRIPTION,\r\n} from \"../actions/types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SUBSCRIPTION_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    case GET_SUBSCRIPTIONS:\r\n      return {\r\n        ...state,\r\n        subscriptions: action.payload,\r\n        isLoading: false,\r\n      };\r\n    case ADD_SUBSCRIPTION:\r\n      return {\r\n        ...state,\r\n        subscriptions: [action.payload, ...state.subscriptions],\r\n      };\r\n    case DELETE_SUBSCRIPTION:\r\n      return {\r\n        ...state,\r\n        subscriptions: state.subscriptions.filter(\r\n          (s) => s._id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { USER_LOADING, GET_USER } from \"../actions/types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport default (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\n\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nconst initialState = {\r\n  auth: {\r\n    isAuthenticated: false,\r\n    user: {},\r\n  },\r\n  post: {\r\n    posts: [],\r\n    totalCount: 0,\r\n    post: null,\r\n    isLoading: false,\r\n  },\r\n  subscription: {\r\n    subscriptions: [],\r\n    isLoading: false,\r\n  },\r\n  user: {\r\n    user: null,\r\n    isLoading: false,\r\n  },\r\n};\r\n\r\nif (localStorage.access_token) {\r\n  const { access_token } = localStorage;\r\n  setAuthToken(access_token);\r\n  const decoded = jwtDecode(access_token);\r\n  initialState.auth.user = decoded;\r\n  initialState.auth.isAuthenticated = true;\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    localStorage.removeItem(\"access_token\");\r\n    setAuthToken(false);\r\n    initialState.auth.user = {};\r\n    initialState.auth.isAuthenticated = false;\r\n    window.location.href = \"/login\";\r\n  }\r\n}\r\n\r\nexport default initialState;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = { auth: PropTypes.object.isRequired };\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { SET_CURRENT_USER } from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\nexport const register = (userData, history) => () => {\r\n  axios.post(\"/api/auth/register\", userData).then(() => history.push(\"/login\"));\r\n};\r\n\r\nexport const login = (userData) => (dispatch) => {\r\n  axios.post(\"/api/auth/login\", userData).then((res) => {\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"access_token\", token);\r\n    setAuthToken(token);\r\n    const decoded = jwtDecode(token);\r\n    dispatch(setCurrentUser(decoded));\r\n  });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"access_token\");\r\n  setAuthToken(false);\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\nexport const setCurrentUser = (user) => ({\r\n  type: SET_CURRENT_USER,\r\n  payload: user,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Header = ({ logout, auth: { isAuthenticated, user } }) => {\r\n  const onLogout = (e) => {\r\n    e.preventDefault();\r\n    logout();\r\n  };\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n\r\n  let links;\r\n\r\n  if (isAuthenticated) {\r\n    links = (\r\n      <li className=\"nav-item dropdown\">\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"#\"\r\n          role=\"button\"\r\n          onClick={() => setIsExpanded((prev) => !prev)}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <i className=\"fa fa-user\"></i>\r\n          Account\r\n        </a>\r\n        {isExpanded ? (\r\n          <div aria-labelledby=\"navbarDropdown\">\r\n            <Link className=\"dropdown-item\" to={\"/user/\" + user.id}>\r\n              My Profile\r\n            </Link>\r\n            <div className=\"dropdown-divider\"></div>\r\n            <a className=\"dropdown-item\" href=\"#\" onClick={onLogout}>\r\n              Log Out\r\n            </a>\r\n          </div>\r\n        ) : null}\r\n      </li>\r\n    );\r\n  } else {\r\n    links = (\r\n      <React.Fragment>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            <div class=\"fa-stack\">\r\n              <i class=\"fa fa-sign-in fa-reverse fa-stack-1x\"></i>\r\n              <i class=\"fa fa-circle-o fa-stack-2x\"></i>\r\n            </div>\r\n            Log In\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/register\">\r\n            <div class=\"fa-stack\">\r\n              <i class=\"fa fa-user-plus fa-reverse fa-stack-1x\"></i>\r\n              <i class=\"fa fa-circle-o fa-stack-2x\"></i>\r\n            </div>\r\n            Register\r\n          </Link>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  return (\r\n    <nav className=\"navbar navbar-icon-top navbar-expand-lg navbar-info bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                <div class=\"fa-stack\">\r\n                  <i class=\"fa fa-globe fa-reverse fa-stack-1x\"></i>\r\n                  <i class=\"fa fa-circle-o fa-stack-2x\"></i>\r\n                </div>\r\n                All Posts\r\n              </Link>\r\n            </li>\r\n            {isAuthenticated && (\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/feed\">\r\n                  <i className=\"fa-tag \"></i>\r\n                  Feed\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </ul>\r\n          <ul className=\"navbar-nav\">{links}</ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React from \"react\";\r\n\r\nexport default () => (\r\n  <footer className=\"p-4 text-center\">\r\n    project by Ultima &copy; {new Date().getFullYear()}\r\n  </footer>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { login } from \"../../actions/auth\";\r\n\r\nconst Login = ({ history, auth, login }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [auth]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login({ email, password });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-4 mx-auto\">\r\n        <div className=\"card\">\r\n          <article className=\"card-body\">\r\n            <h4 className=\"card-title text-center mb-4 mt-1\">Log In</h4>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    pattern=\".{5,30}\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-lock\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    pattern=\".{6,30}\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-dark btn-block\">\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { register } from \"../../actions/auth\";\r\n\r\nconst Register = ({ auth, history, register }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    register({ name, email, password }, history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-4 mx-auto\">\r\n        <div className=\"card\">\r\n          <article className=\"card-body\">\r\n            <h4 className=\"card-title text-center mb-4 mt-1\">Registration</h4>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-user\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    pattern=\".{3,20}\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-envelope\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    pattern=\".{5,30}\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-lock\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    pattern=\".{6,30}\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-dark btn-block\">\r\n                  Register\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  register: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { register })(Register);\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  POST_LOADING,\r\n  ADD_POST,\r\n  GET_POSTS,\r\n  GET_POST,\r\n  DELETE_POST,\r\n  CLEAR_POSTS,\r\n  UPDATE_POST,\r\n} from \"./types\";\r\n\r\nexport const create = (post) => (dispatch) => {\r\n  axios.post(\"/api/posts\", post).then((res) =>\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getAll = (params) => (dispatch) => {\r\n  dispatch(setPostLoading(true));\r\n  axios\r\n    .get(\"/api/posts\", { params })\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: {\r\n          posts: res.data,\r\n          totalCount: +res.headers[\"x-total-count\"],\r\n        },\r\n      })\r\n    )\r\n    .catch(() => {\r\n      dispatch(setPostLoading(false));\r\n      dispatch(clearPosts());\r\n    });\r\n};\r\n\r\nexport const getById = (id, history) => (dispatch) => {\r\n  dispatch(setPostLoading(true));\r\n  axios\r\n    .get(`/api/posts/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch(() => {\r\n      dispatch(setPostLoading(false));\r\n      history.push(\"/404\");\r\n    });\r\n};\r\n\r\nexport const remove = (id) => (dispatch) => {\r\n  axios.delete(`/api/posts/${id}`).then(() =>\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createLike = (postId, TYPE) => (dispatch) => {\r\n  axios.post(`/api/posts/${postId}/likes`).then((res) =>\r\n    dispatch({\r\n      type: TYPE,\r\n      payload: res.data,\r\n    })\r\n  );\r\n};\r\n\r\nexport const removeLike = (postId, likeId, TYPE) => (dispatch) => {\r\n  axios.delete(`/api/posts/${postId}/likes/${likeId}`).then((res) =>\r\n    dispatch({\r\n      type: TYPE,\r\n      payload: res.data,\r\n    })\r\n  );\r\n};\r\n\r\nexport const createComment = (postId, comment) => (dispatch) => {\r\n  axios.post(`/api/posts/${postId}/comments`, comment).then((res) =>\r\n    dispatch({\r\n      type: UPDATE_POST,\r\n      payload: res.data,\r\n    })\r\n  );\r\n};\r\n\r\nexport const removeComment = (postId, commentId) => (dispatch) => {\r\n  axios.delete(`/api/posts/${postId}/comments/${commentId}`).then((res) =>\r\n    dispatch({\r\n      type: UPDATE_POST,\r\n      payload: res.data,\r\n    })\r\n  );\r\n};\r\n\r\nconst clearPosts = () => ({\r\n  type: CLEAR_POSTS,\r\n});\r\n\r\nconst setPostLoading = (isLoading) => ({\r\n  type: POST_LOADING,\r\n  payload: isLoading,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Quill from \"react-quill\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { create } from \"../../actions/post\";\r\n\r\nconst PostForm = ({ create }) => {\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    create({ body });\r\n    setBody(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body\">\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <Quill\r\n              placeholder=\"What's up?\"\r\n              theme=\"snow\"\r\n              modules={{\r\n                toolbar: [\r\n                  [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n                  [\"link\", \"image\", \"video\"],\r\n                  [\"clean\"],\r\n                ],\r\n              }}\r\n              value={body}\r\n              onChange={(value) => setBody(value)}\r\n            />\r\n          </div>\r\n          <div className=\"btn-group float-right\">\r\n            <button type=\"submit\" className=\"btn btn-dark\">\r\n              Share\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  create: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { create })(PostForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../../store/index\";\r\nimport { createLike, removeLike } from \"../../../actions/post\";\r\n\r\nconst Like = ({ auth, postId, likes, TYPE, removeLike, createLike }) => {\r\n  const onLikeClick = (e) => {\r\n    e.preventDefault();\r\n    if (auth.isAuthenticated) {\r\n      const existedLike = likes.find((l) => l.user === auth.user.id);\r\n      if (existedLike) {\r\n        removeLike(postId, existedLike._id, TYPE);\r\n      } else {\r\n        createLike(postId, TYPE);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <a href=\"#\" role=\"button\" className=\"card-link\" onClick={onLikeClick}>\r\n      <i className=\"fa fa-heart\"></i> {likes.length}\r\n    </a>\r\n  );\r\n};\r\n\r\nLike.propTypes = {\r\n  createLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  likes: PropTypes.array.isRequired,\r\n  TYPE: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { createLike, removeLike })(Like);\r\n","import React from \"react\";\r\nimport md5 from \"js-md5\";\r\n\r\nexport default ({ user, width = \"\" }) => (\r\n  <img\r\n    src={\r\n      \"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y\" +\r\n      md5(user.email)\r\n    }\r\n    className=\"rounded-circle\"\r\n    alt={user.name}\r\n    width={width}\r\n  />\r\n);\r\n","import Post from \"./Post\";\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../../store/index\";\r\nimport { remove } from \"../../../actions/post\";\r\n\r\nimport Like from \"./Like\";\r\nimport ProfileImage from \"../ProfileImage\";\r\n\r\nconst Post = ({ post, remove, auth, TYPE }) => {\r\n  const onDelete = () => remove(post._id);\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-header\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"mr-2\">\r\n              <Link to={\"/user/\" + post.user._id}>\r\n                <ProfileImage user={post.user} width=\"50\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"ml-2\">\r\n              <div className=\"h5 m-0\">{post.user.name}</div>\r\n              <div className=\"h7 text-muted\">\r\n                <i className=\"fa fa-clock-o\"></i>{\" \"}\r\n                {new Date(post.createdDate).toDateString()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {auth.isAuthenticated && auth.user.name === post.user.name && (\r\n            <div className=\"dropdown\">\r\n              <button\r\n                className=\"btn btn-link dropdown-toggle\"\r\n                type=\"button\"\r\n                id=\"drop\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              ></button>\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right\"\r\n                aria-labelledby=\"drop\"\r\n              >\r\n                <a className=\"dropdown-item\" role=\"button\" onClick={onDelete}>\r\n                  Remove\r\n                </a>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"card-body\"\r\n        dangerouslySetInnerHTML={{ __html: post.body }}\r\n      ></div>\r\n      <div className=\"card-footer\">\r\n        <Like postId={post._id} likes={post.likes} TYPE={TYPE} />\r\n        <Link to={\"/post/\" + post._id} className=\"card-link\">\r\n          <i className=\"fa fa-arrow-right\"></i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  remove: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  TYPE: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { remove })(Post);\r\n","import Loader from \"./Loader\";\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nimport \"./Loader.css\";\r\n\r\nexport default () => (\r\n  <div id=\"fountainG\" className=\"mt-4\">\r\n    <div id=\"fountainG_1\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_2\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_3\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_4\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_5\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_6\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_7\" className=\"fountainG\"></div>\r\n    <div id=\"fountainG_8\" className=\"fountainG\"></div>\r\n  </div>\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { UPDATE_POSTS } from \"../../actions/types\";\r\nimport { getAll } from \"../../actions/post\";\r\n\r\nimport Post from \"./Post\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst LIMIT = 10;\r\n\r\nconst Posts = ({\r\n  getAll,\r\n  queryParams,\r\n  post: { isLoading, posts, totalCount },\r\n}) => {\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  useEffect(() => getAll(getQueryParams()), []);\r\n\r\n  useEffect(() => getAll(getQueryParams()), [activePage]);\r\n\r\n  const getQueryParams = () => ({\r\n    ...queryParams,\r\n    skip: (activePage - 1) * LIMIT,\r\n    limit: LIMIT,\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <Loader />}\r\n      {!isLoading && totalCount === 0 && (\r\n        <div className=\"text-center\">\r\n          <h2>There is nothing</h2>\r\n        </div>\r\n      )}\r\n      {posts.map((p) => (\r\n        <Post post={p} key={p._id} TYPE={UPDATE_POSTS} />\r\n      ))}\r\n      {!isLoading && totalCount > posts.length && (\r\n        <Pagination\r\n          activePage={activePage}\r\n          itemsCountPerPage={LIMIT}\r\n          totalItemsCount={totalCount}\r\n          onChange={(page) => setActivePage(page)}\r\n          itemClass=\"page-item\"\r\n          linkClass=\"page-link\"\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getAll: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  queryParams: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAll })(Posts);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\n\r\nimport PostForm from \"../shared/PostForm\";\r\nimport Posts from \"../shared/Posts\";\r\n\r\nconst AllPosts = ({ auth }) => (\r\n  <div className=\"row mt-4\">\r\n    <div className=\"col-md-6 mx-auto\">\r\n      {auth.isAuthenticated && <PostForm />}\r\n      <Posts queryParams={{}} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nAllPosts.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AllPosts);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { removeComment } from \"../../actions/post\";\r\n\r\nimport ProfileImage from \"../shared/ProfileImage\";\r\n\r\nconst Comment = ({ comment, postId, removeComment, auth }) => {\r\n  const onDelete = () => removeComment(postId, comment._id);\r\n\r\n  const ReactComment = (props) => {\r\n    const el = useRef();\r\n    useEffect(() => {\r\n      el.current.outerHTML = `<!-- ${props.text} -->`;\r\n    }, []);\r\n    return <div ref={el} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mb-3\">\r\n      <div className=\"card-body\">\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-md-10\">\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div className=\"mr-2\">\r\n                  <ProfileImage user={comment.user} width=\"50\" />\r\n                </div>\r\n                <div className=\"ml-2\">\r\n                  <div className=\"h5 m-0\">{comment.user.name}</div>\r\n                  <div className=\"h7 text-muted\">\r\n                    <i className=\"fa fa-clock-o\"></i>{\" \"}\r\n                    {new Date(comment.createdDate).toDateString()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-2 text-right\">\r\n            {auth.isAuthenticated && auth.user.name === comment.user.name && (\r\n              <div className=\"dropdown\">\r\n                <button\r\n                  className=\"btn btn-link dropdown-toggle\"\r\n                  type=\"button\"\r\n                  id=\"drop\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                ></button>\r\n                <div\r\n                  className=\"dropdown-menu dropdown-menu-right\"\r\n                  aria-labelledby=\"drop\"\r\n                >\r\n                  <a className=\"dropdown-item\" role=\"button\" onClick={onDelete}>\r\n                    Remove\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          <ReactComment text={comment.body} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  removeComment: PropTypes.func.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { removeComment })(Comment);\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Quill from 'react-quill'\r\n\r\nimport { connect } from '../../store/index'\r\nimport { createComment } from '../../actions/post'\r\n\r\nconst CommentForm = ({ postId, createComment }) => {\r\n  const [body, setBody] = useState('')\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    createComment(postId, { body })\r\n    setBody('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-body\">\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"form-group\">\r\n            <Quill\r\n              placeholder=\"What do you think?\"\r\n              theme=\"snow\"\r\n              modules={{ toolbar: false }}\r\n              value={body}\r\n              onChange={value => setBody(value)}\r\n            />\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button type=\"submit\" className=\"btn btn-dark\">Comment</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  createComment: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  postId: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ auth: state.auth })\r\n\r\nexport default connect(mapStateToProps, { createComment })(CommentForm)","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { UPDATE_POST } from \"../../actions/types\";\r\nimport { getById as getPostById } from \"../../actions/post\";\r\n\r\nimport Loader from \"../shared/Loader\";\r\nimport Post from \"../shared/Post\";\r\nimport Comment from \"./Comment\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nconst SinglePost = ({ getPostById, match, post, auth, history }) => {\r\n  useEffect(() => getPostById(match.params.id, history), []);\r\n\r\n  return !post.isLoading && post.post !== null ? (\r\n    <div className=\"row mt-5\">\r\n      <div className=\"col-md-6 mx-auto\">\r\n        <Post post={post.post} TYPE={UPDATE_POST} />\r\n        <div className=\"col-md-12 mx-auto\">\r\n          {auth.isAuthenticated && <CommentForm postId={post.post._id} />}\r\n          {post.post.comments.map((c) => (\r\n            <Comment comment={c} postId={post.post._id} key={c._id} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nSinglePost.propTypes = {\r\n  getPostById: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPostById })(SinglePost);\r\n","import axios from \"axios\";\r\n\r\nimport { GET_USER, USER_LOADING } from \"./types\";\r\n\r\nexport const getUserById = (id, history) => (dispatch) => {\r\n  dispatch(setUserLoading(true));\r\n  axios\r\n    .get(`/api/users/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch(() => {\r\n      dispatch(setUserLoading(false));\r\n      history.push(\"/404\");\r\n    });\r\n};\r\n\r\nconst setUserLoading = (isLoading) => ({\r\n  type: USER_LOADING,\r\n  payload: isLoading,\r\n});\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  SUBSCRIPTION_LOADING,\r\n  ADD_SUBSCRIPTION,\r\n  GET_SUBSCRIPTIONS,\r\n  DELETE_SUBSCRIPTION,\r\n} from \"./types\";\r\n\r\nexport const create = (like) => (dispatch) => {\r\n  axios.post(\"/api/subscriptions\", like).then((res) =>\r\n    dispatch({\r\n      type: ADD_SUBSCRIPTION,\r\n      payload: res.data,\r\n    })\r\n  );\r\n};\r\n\r\nexport const getAll =\r\n  (params = {}) =>\r\n  (dispatch) => {\r\n    dispatch(setSubscriptionLoading(true));\r\n    axios\r\n      .get(\"/api/subscriptions\", { params })\r\n      .then((res) =>\r\n        dispatch({\r\n          type: GET_SUBSCRIPTIONS,\r\n          payload: res.data,\r\n        })\r\n      )\r\n      .catch(() => dispatch(setSubscriptionLoading(false)));\r\n  };\r\n\r\nexport const remove = (id) => (dispatch) => {\r\n  axios.delete(`/api/subscriptions/${id}`).then(() =>\r\n    dispatch({\r\n      type: DELETE_SUBSCRIPTION,\r\n      payload: id,\r\n    })\r\n  );\r\n};\r\n\r\nexport const setSubscriptionLoading = (isLoading) => ({\r\n  type: SUBSCRIPTION_LOADING,\r\n  payload: isLoading,\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { create, getAll, remove } from \"../../actions/subscription\";\r\n\r\nconst Subscription = ({\r\n  create,\r\n  getAll,\r\n  remove,\r\n  auth,\r\n  subscription: { subscriptions, isLoading },\r\n  history,\r\n  userId,\r\n}) => {\r\n  useEffect(() => getAll({ profile: userId }), []);\r\n\r\n  const onSubClick = (e) => {\r\n    e.preventDefault();\r\n    if (!auth.isAuthenticated) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      const existedSub = subscriptions.find(\r\n        (s) => s.subscriber === auth.user.id\r\n      );\r\n      if (existedSub) {\r\n        remove(existedSub._id);\r\n      } else {\r\n        create({ profile: userId });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    !isLoading && (\r\n      <button\r\n        className=\"btn btn-dark btn-block subscribe-btn\"\r\n        onClick={onSubClick}\r\n      >\r\n        Subscribe | <i className=\"fa fa-users\"></i> {subscriptions.length}\r\n      </button>\r\n    )\r\n  );\r\n};\r\n\r\nSubscription.propTypes = {\r\n  create: PropTypes.func.isRequired,\r\n  getAll: PropTypes.func.isRequired,\r\n  remove: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  subscription: PropTypes.object.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  subscription: state.subscription,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  create,\r\n  getAll,\r\n  remove,\r\n})(withRouter(Subscription));\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { getUserById } from \"../../actions/user\";\r\nimport Loader from \"../shared/Loader\";\r\nimport PostForm from \"../shared/PostForm\";\r\nimport Posts from \"../shared/Posts\";\r\nimport ProfileImage from \"../shared/ProfileImage\";\r\nimport Subscription from \"./Subscription\";\r\n\r\nconst UserProfile = ({\r\n  getUserById,\r\n  match,\r\n  history,\r\n  user: { user, isLoading },\r\n  auth,\r\n}) => {\r\n  useEffect(() => getUserById(match.params.id, history), []);\r\n\r\n  return !isLoading && user !== null ? (\r\n    <React.Fragment>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"row\">\r\n            <div className=\"col-8\">\r\n              <h2 className=\"profile-username\">{user.name}</h2>\r\n              <p>\r\n                <strong>Registered: </strong>\r\n                {new Date(user.createdDate).toDateString()}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-4 text-center\">\r\n              <ProfileImage user={user} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {!(auth.user.id === user._id) && (\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-md-12 text-center\">\r\n            <div className=\"col-4 mx-auto\">\r\n              <Subscription userId={user._id} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          {auth.user.id === user._id && <PostForm />}\r\n          <Posts queryParams={{ user: user._id }} />\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nUserProfile.propTypes = {\r\n  getUserById: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserById })(UserProfile);\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"../../store/index\";\r\nimport { getAll as getAllSubscriptions } from \"../../actions/subscription\";\r\nimport Loader from \"../shared/Loader\";\r\nimport Posts from \"../shared/Posts\";\r\n\r\nconst Feed = ({\r\n  getAllSubscriptions,\r\n  auth,\r\n  subscription: { isLoading, subscriptions },\r\n}) => {\r\n  useEffect(() => getAllSubscriptions({ subscriber: auth.user.id }), []);\r\n  return !isLoading ? (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-md-6 mx-auto\">\r\n        {subscriptions.length !== 0 ? (\r\n          <Posts\r\n            queryParams={{\r\n              users: subscriptions.map((s) => s.profile).join(\",\"),\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"text-center\">\r\n            <h2>You have no subscriptions</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loader />\r\n  );\r\n};\r\n\r\nFeed.propTypes = {\r\n  getAllSubscriptions: PropTypes.func.isRequired,\r\n  subscription: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  subscription: state.subscription,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAllSubscriptions })(Feed);\r\n","import React from 'react'\r\n\r\nexport default () => (\r\n  <div className=\"text-center mt-5\">\r\n    <h1>Page Not Found</h1>\r\n  </div>\r\n)\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"./store/index\";\r\nimport rootReducer from \"./reducers\";\r\nimport initialState from \"./store/initialState\";\r\n\r\nimport PrivateRoute from \"./components/shared/PrivateRoute\";\r\nimport Header from \"./components/layout/Header\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport AllPosts from \"./components/all-posts/AllPosts\";\r\nimport SinglePost from \"./components/single-post/SinglePost\";\r\nimport UserProfile from \"./components/user-profile/UserProifle\";\r\nimport Feed from \"./components/feed/Feed\";\r\nimport NotFound from \"./components/not-found/NotFound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider reducer={rootReducer} initialState={initialState}>\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <Header />\r\n          <div className=\"container\">\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route exact path=\"/\" component={AllPosts} />\r\n            <Route path=\"/post/:id\" component={SinglePost} />\r\n            <Route path=\"/user/:id\" component={UserProfile} />\r\n            <Switch>\r\n              <PrivateRoute path=\"/feed\" component={Feed} />\r\n            </Switch>\r\n            <Route path=\"/404\" component={NotFound} />\r\n          </div>\r\n          <Footer />\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.js'\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}